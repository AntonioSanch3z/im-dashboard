tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - ec3_custom_types: https://raw.githubusercontent.com/grycap/ec3/tosca/tosca/custom_types.yaml

metadata:
  display_name: Launch a Storm Virtual Cluster
  icon: images/storm.png
  tag: beta
 
description: TOSCA template for launching a Storm Cluster.

topology_template:
  inputs:
    wn_num:
      type: integer
      description: Number of WNs in the cluster
      default: 1
      required: yes
    fe_cpus:
      type: integer
      description: Number of CPUs for the front-end node
      default: 1
      required: yes
      constraints:
      - valid_values: [ 1, 2, 4, 8, 16, 32, 64 ]
    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 2 GB
      required: yes
      constraints:
      - valid_values: [ 2 GB, 4 GB, 8 GB, 16 GB, 32 GB, 64 GB, 128 GB, 256 GB, 512 GB ]
    wn_cpus:
      type: integer
      description: Number of CPUs for the WNs
      default: 1
      required: yes
      constraints:
      - valid_values: [ 1, 2, 4, 8, 16, 32, 64 ]
    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 2 GB
      required: yes
      constraints:
      - valid_values: [ 2 GB, 4 GB, 8 GB, 16 GB, 32 GB, 64 GB, 128 GB, 256 GB, 512 GB ]


  node_templates:

    fe_node:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Storm
      requirements:
        - host: fe

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Storm
      properties:
        front_end_ip: { get_attribute: [ fe, private_address, 0 ] }
      requirements:
        - host: wn

    fe:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: stormserver
            network_name: PUBLIC
            ports:
              http_port:
                protocol: tcp
                source: 8080
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: 16.04

    wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count:  { get_input: wn_num }
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: 16.04

  outputs:
    storm_ui:
      value: { concat: [ 'https://', get_attribute: [ fe, public_address, 0 ], ':8080/' ] }
