tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - ec3_custom_types: https://raw.githubusercontent.com/grycap/ec3/tosca/tosca/custom_types.yaml

metadata:
  display_name: Launch a OSCAR Virtual Elastic Cluster
  icon: https://raw.githubusercontent.com/grycap/oscar/master/docs/source/images/oscar-logo.png
  tag: elastic

description: TOSCA template for launching a OSCAR Virtual Elastic Cluster.

topology_template:
  inputs:
    wn_num:
      type: integer
      description: Maximum number of WNs in the elastic cluster
      default: 1
      required: yes
    fe_cpus:
      type: integer
      description: Number of CPUs for the front-end node
      default: 2
      required: yes
      constraints:
      - valid_values: [ 2, 4, 8, 16, 32, 64 ]
    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 4 GB
      required: yes
      constraints:
      - valid_values: [ 4 GB, 8 GB, 16 GB, 32 GB, 64 GB, 128 GB, 256 GB, 512 GB ]
    wn_cpus:
      type: integer
      description: Number of CPUs for the WNs
      default: 2
      required: yes
      constraints:
      - valid_values: [ 2, 4, 8, 16, 32, 64 ]
    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 4 GB
      required: yes
      constraints:
      - valid_values: [ 4 GB, 8 GB, 16 GB, 32 GB, 64 GB, 128 GB, 256 GB, 512 GB ]

    storage_size:
      type: string
      description: Size of the extra HD added to the instance
      default: 50 GB
      required: yes
      constraints:
      - valid_values: [ 30 GB, 50 GB, 100 GB ]

    admin_token:
      type: string
      description: Access Token for the Kubernetes admin user
      default: not_very_secret_token

  node_templates:

    oscar:
      type: tosca.nodes.indigo.OSCAR
      properties:
        minio_secretkey:  minio123
      capabilities:
        endpoint:
          properties:
            ports:
              http_port:
                protocol: tcp
                source: 80
              https_port:
                protocol: tcp
                source: 443
      requirements:
        - host: lrms_front_end

    elastic_cluster_front_end:
      type: tosca.nodes.ec3.ElasticCluster
      properties:
        config_options:
          - { section: 'scheduling', option: 'IDLE_TIME', value: '300' }
          - { section: 'scheduling', option: 'RECONSIDER_JOB_TIME', value: '60' }
          - { section: 'monitoring', option: 'MAX_WAIT_POWERON', value: '3000' }
          - { section: 'monitoring', option: 'MAX_WAIT_POWEROFF', value: '600' }
          - { section: 'monitoring', option: 'PERIOD_LIFECYCLE', value: '10' }
          - { section: 'monitoring', option: 'PERIOD_MONITORING_NODES', value: '2' }
          - { section: 'client', option: 'CLUES_REQUEST_WAIT_TIMEOUT', value: '3000' }
          - { section: 'scheduling', option: 'SCHEDULER_CLASSES', value: 'clueslib.schedulers.CLUES_Scheduler_PowOn_Requests, clueslib.schedulers.CLUES_Scheduler_Reconsider_Jobs, clueslib.schedulers.CLUES_Scheduler_PowOff_IDLE, clueslib.schedulers.CLUES_Scheduler_PowOn_Free' }
          - { section: 'scheduling', option: 'EXTRA_SLOTS_FREE', value: '1' }
      capabilities:
        endpoint:
          properties:
            port: 8800
            protocol: tcp
      requirements:
        - lrms: lrms_front_end
        - wn: wn_node

    lrms_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Kubernetes
      capabilities:
        endpoint:
          properties:
            port: 30443
            protocol: tcp
      properties:
        admin_username:  kubeuser
        admin_token: { get_input: admin_token }
        install_kubeapps:  false
        install_metrics: true
        install_nfs_client: true
        install_ingress: false
        version: 1.16.4
      requirements:
        - host: front

    front:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: kubeserver
            network_name: PUBLIC
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
        os:
          properties:
            distribution: ubuntu
            type: linux
      requirements:
        - local_storage:
            node: my_block_storage
            capability: tosca.capabilities.Attachment
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: /pv
                device: hdb

    my_block_storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: storage_size }

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Kubernetes
      properties:
        front_end_ip: { get_attribute: [ front, private_address, 0 ] }
      capabilities:
        wn:
          properties:
            max_instances: { get_input: wn_num }
            min_instances: 0
      requirements:
        - host: wn
            
    wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count:  1
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
        os:
          properties:
            distribution: ubuntu
            type: linux

  outputs:
    dashboard_endpoint:
      value: { concat: [ 'https://', get_attribute: [ front, public_address, 0 ], ':30443/' ] }
    oscarui_endpoint:
      value: { concat: [ 'https://', get_attribute: [ front, public_address, 0 ], '/' ] }
