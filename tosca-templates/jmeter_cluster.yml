tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - ec3_custom_types: https://raw.githubusercontent.com/grycap/ec3/tosca/tosca/custom_types.yaml

description: Deploy a JMeter Virtual Cluster.

metadata:
  name: JMeter virtual cluster
  display_name: Deploy a JMeter virtual cluster
  icon: images/jmeter.png

topology_template:
  inputs:
    wn_num:
      type: integer
      description: Number of WNs in the cluster
      default: 1
      required: yes
    fe_cpus:
      type: integer
      description: Number of CPUs for the front-end node
      default: 1
      required: yes
    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 1 GB
      required: yes
    fe_disk_size:
      type: scalar-unit.size
      description: Size of the FE root disk.
      default: 20 GB
      constraints:
      - valid_values: [ 20 GB, 30 GB, 40 GB, 50 GB, 100 GB, 200 GB, 500 GB, 1 TB, 2 TB ]

    wn_cpus:
      type: integer
      description: Number of CPUs for the WNs
      default: 1
      required: yes
    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 1 GB
      required: yes
    wn_disk_size:
      type: scalar-unit.size
      description: Size of the WN root disk.
      default: 20 GB
      constraints:
      - valid_values: [ 20 GB, 30 GB, 40 GB, 50 GB, 100 GB, 200 GB, 500 GB, 1 TB, 2 TB ]

    jmeter_version:
      type: string
      description: Version of JMeter to install
      default: '5.4.1'
      required: yes

  node_templates:


    jmeter_fe:
      type: tosca.nodes.SoftwareComponent
      artifacts:
        ssh_role:
          file: grycap.ssh
          type: tosca.artifacts.AnsibleGalaxy.role
        nfs_role:
          file: grycap.nfs
          type: tosca.artifacts.AnsibleGalaxy.role
      requirements:
        - host: front 
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/ec3/tosca/tosca/artifacts/jmeter/jmeter_fe.yml
            inputs:
              jmeter_version: { get_input: jmeter_version }


    front:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: jmeterserver
            network_name: PUBLIC
            ports:
              http_port:
                protocol: tcp
                source: 22
        host:
          properties:
            disk_size: { get_input: fe_disk_size }
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
        os:
          properties:
            type: linux

    jmeter_wn:
      type: tosca.nodes.SoftwareComponent
      artifacts:
        ssh_role:
          file: grycap.ssh
          type: tosca.artifacts.AnsibleGalaxy.role
        nfs_role:
          file: grycap.nfs
          type: tosca.artifacts.AnsibleGalaxy.role
      requirements:
        - host: wn 
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/ec3/tosca/tosca/artifacts/jmeter/jmeter_wn.yml
            inputs:
              jmeter_version: { get_input: jmeter_version }

    wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: { get_input: wn_num }
        host:
          properties:
            disk_size: { get_input: wn_disk_size }
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
        os:
          properties:
            distribution: ubuntu
            type: linux


  outputs:
    cluster_ip:
      value: { get_attribute: [ front, public_address, 0 ] }
    cluster_creds:
      value: { get_attribute: [ front, endpoint, credential, 0 ] }
