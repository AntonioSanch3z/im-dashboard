tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml
 
description: >
  TOSCA for launching a set of virtual machines in an private network accessible using
  a Proxy/Bastion host.

topology_template:
  inputs:
    num_cpus:
      type: integer
      description: Number of virtual cpus for the VM
      default: 1
      constraints:
      - valid_values: [ 1, 2, 4, 8, 16, 32, 64 ]
    mem_size:
      type: scalar-unit.size
      description: Amount of memory for the VM
      default: 2 GB
      constraints:
      - valid_values: [ 2 GB, 4 GB, 8 GB, 16 GB, 32 GB, 64 GB, 128 GB, 256 GB, 512 GB ]
    num_instances:
      type: integer
      description: Number of VMs to be spawned
      default: 1

    proxy_host:
      type: string
      description: Proxy/Bastion host needed to access the created VMs
      default: ""
    private_key:
      type: string
      description: Private key to SSH access to the Proxy/Bastion host
      default: ""
    user:
      type: string
      description: Username to SSH access to the Proxy/Bastion host
      default: ""

  node_templates:

    priv_network:
      type: tosca.nodes.indigo.network.Network
      properties:
        network_type: private
        proxy_host: { get_input: proxy_host }
        proxy_credential:
          user: { get_input: user }
          token_type: private_key
          token: { get_input: private_key }

    server_port:
      type: tosca.nodes.network.Port
      properties:
        order: 0
      requirements:
        - binding: server
        - link: priv_network

    server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: { get_input: num_instances }
        endpoint:
          properties:
            ports:
              openvpn:
                protocol: tcp
                source: 22
        host:
          properties:
            num_cpus: { get_input: num_cpus }
            mem_size: { get_input: mem_size }
        os:
          properties:
            type: linux


  outputs:
    cluster_ip:
      value: { get_attribute: [ server, public_address, 0 ] }
    cluster_creds:
      value: { get_attribute: [ server, endpoint, credential, 0 ] }
